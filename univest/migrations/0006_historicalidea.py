# Generated by Django 4.2.5 on 2023-09-06 05:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('univest', '0005_delete_history'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalIdea',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('univest_id', models.IntegerField(db_index=True)),
                ('streamChannelId', models.CharField(blank=True, max_length=255, null=True)),
                ('streamMessageId', models.CharField(blank=True, max_length=255, null=True)),
                ('senderId', models.IntegerField()),
                ('stockName', models.CharField(max_length=255)),
                ('suggestedPrice', models.FloatField()),
                ('expiresAt', models.BigIntegerField()),
                ('targetPrice', models.FloatField()),
                ('stopLoss', models.FloatField(blank=True, null=True)),
                ('recommendationType', models.CharField(max_length=50)),
                ('confidenceLevel', models.CharField(blank=True, max_length=50, null=True)),
                ('closureReason', models.CharField(blank=True, max_length=255, null=True)),
                ('bsePriceAtClosure', models.FloatField(blank=True, null=True)),
                ('nsePriceAtClosure', models.FloatField(blank=True, null=True)),
                ('createdAt', models.BigIntegerField()),
                ('lastModified', models.BigIntegerField()),
                ('channelName', models.CharField(blank=True, max_length=255, null=True)),
                ('firstName', models.CharField(max_length=255)),
                ('lastName', models.CharField(blank=True, max_length=255, null=True)),
                ('senderContactNumber', models.CharField(max_length=20)),
                ('profilePictureUrl', models.URLField(blank=True, null=True)),
                ('open', models.BooleanField()),
                ('hit', models.BooleanField()),
                ('finCode', models.IntegerField()),
                ('expectedDurationEnum', models.CharField(max_length=50, null=True)),
                ('status', models.CharField(max_length=50)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('watchListIds', models.JSONField(blank=True, null=True)),
                ('analysis', models.TextField(blank=True, null=True)),
                ('attachments', models.JSONField(blank=True, null=True)),
                ('term', models.CharField(max_length=50)),
                ('newTradeCard', models.BooleanField()),
                ('locked', models.BooleanField()),
                ('logoUrl', models.URLField(blank=True, null=True)),
                ('compName', models.CharField(blank=True, max_length=255, null=True)),
                ('netGain', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical idea',
                'verbose_name_plural': 'historical ideas',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
